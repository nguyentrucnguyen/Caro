// caro.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <Windows.h>
#include <fstream>
#include <string>

void FixConsoleWindow() {
    HWND consoleWindow = GetConsoleWindow();
    LONG style = GetWindowLong(consoleWindow, GWL_STYLE);
    style = style & ~(WS_MAXIMIZEBOX) & ~(WS_THICKFRAME);
    SetWindowLong(consoleWindow, GWL_STYLE, style);
}
void GotoXY(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}

void Drawboard(){
    for (int i = 0; i < 29; i++) {
        for (int j = 0; j < 61; j++) {
            if (i % 2 == 1) {
                if (j % 4 == 0) {
                    std::cout << char(179);
                }
                else std::cout << " ";
            }
            else std::cout << char(196);
        }
        std::cout << "\n";
    }
}
bool checkwin1(int turn, int** board, int x, int y) {
    int k = 1;
    int block = 0;
    for (int i = 1;x + i <14 ; i++) {
        if (board[x + i][y] == turn) k += 1;
        else if (board[x + i][y] == 0) break;
        else if (board[x + i][y] == -turn) {block += 1; break;}
    }

    for (int i = 1; x - i >= 0; i++) {
        if (board[x - i][y] == turn) k += 1;
        else if (board[x - i][y] == 0) break;
        else if (board[x - i][y] == -turn) { block += 1; break; }
    }
    bool e = (k > 5) || ((k == 5) && block < 2);
    
    if (e) {
        for (int i = 0; x + i < 14; i++) {
            if (board[x + i][y] == turn) 
                if (board[x + i][y] == turn)
                {
                    GotoXY(2 + (y) * 4, 1 + (x + i) * 2);
                    if (turn == -1) {
                        std::cout << "\x1B[32mX\033[0m";
                    }
                    else
                    {
                        std::cout << "\x1B[32mO\033[0m";
                    }
                }
            else if (board[x + i][y] == 0) break;
            else if (board[x + i][y] == -turn) { break; }
        }

        for (int i = 1; x - i >= 0; i++) {
            if (board[x - i][y] == turn) {
                GotoXY(2 + (y) * 4, 1 + (x - i) * 2);
                if (turn == -1) {
                    std::cout << "\x1B[32mX\033[0m";
                }
                else
                {
                    std::cout << "\x1B[32mO\033[0m";
                }
            }
            else if (board[x - i][y] == 0) break;
            else if (board[x - i][y] == -turn) { break; }
        }
    }
    
    return e;

}
bool checkwin2(int turn, int** board, int x, int y) {
    int k = 1;
    int block = 0;
    for (int i = 1;y + i<15; i++) {
        if (board[x][y + i] == turn) k += 1;
        else if (board[x][y + i] == 0) break;
        else if (board[x][y + i] == -turn) { block += 1; break; }
    }

    for (int i = 1; y - i >= 0; i++) {
        if (board[x][y - i] == turn) k += 1;
        else if (board[x][y - i] == 0) bre
